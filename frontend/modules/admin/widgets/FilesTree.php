<?php

namespace frontend\modules\admin\widgets;

use frontend\modules\admin\components\Url;
use yii\base\Widget;
use yii\helpers\Html;

class FilesTree extends Widget
{
    /** @var  string Current real Theme folder name */
    public $themeFolder;

    /**
     * Current edited file
     * @var $currentFile string
     */
    public $currentFile;

    /**
     * Theme folders/files structure
     * @var array
     */
    public $filesTree = [
        'Layouts' => [
            'layout.twig',
        ],
        'Templates' => [
            'index.twig',
            'product.twig',
            'order.twig',
            'page.twig',
            'cart.twig',
        ],
        'Snippets' => [
            'slider.twig',
            'features.twig',
            'reviews.twig',
            'process.twig',
        ],
        'JS' => [
            'bootstrap.js',
            'scripts.js',
        ],
        'CSS' => [
            'bootstrap.css',
            'styles.css',
        ],
        'Config' => [
            'settings.json'
        ],
    ];

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

    }

    /**
     * @return string
     */
    public function run()
    {
        $menuTree = $this->_filesTree($this->filesTree);

        $menuTree = Html::tag('ul', $menuTree, []);
        $menuTree = Html::tag('div', $menuTree, [
            'id' => 'm_tree_1',
            'class' => 'tree-demo'
        ]);

        return $menuTree;
    }

    /**
     * Return files tree menu
     * @param $tree array
     * @return string
     */
    private function _filesTree($tree){

        $menuTree = '';

        foreach ($tree as $key => $item) {
            $menuTree .= static::_fileTreeItem($key, $item);
        }

        return $menuTree;
    }

    /**
     * Return files tree item
     * @param $key
     * @param $item
     * @return string
     */
    private function _fileTreeItem($key, $item)
    {

        $isFolder = is_array($item);

        $menuItem = $isFolder ? $key : $item;

        if ($isFolder) {
            $menuItem .= Html::tag('ul', $this->_filesTree($item), ['class' => 'my-ul']);
        } else {

            $selected = $this->currentFile === $item;

            $menuItem = Html::tag('a', $menuItem, [
                'class' => $selected ? 'jstree-clicked' : '',
                'href' => Url::toRoute([
                    '/settings/edit-theme',
                    'theme' => $this->themeFolder,
                    'file' => $item,
                ]),
            ]);
        }

        $menuItem = Html::tag('li', $menuItem, [
            'data-jstree' => $isFolder ? '{ "opened" : true }' :  '{ "type" : "file" }',
            'class' => '',
        ]);

        return $menuItem;
    }
}